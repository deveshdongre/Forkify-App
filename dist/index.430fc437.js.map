{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAuC,AAAvC,qCAAuC;AACvC,KAAK,CAAC,UAAU,oBAAmB,CAAC;IAClC,GAAG,CAAA,CAAC;QAEF,EAAgB,AAAhB,cAAgB;QAChB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAA2E;QACnG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAC3B,EAAyB,AAAzB,uBAAyB;QAIzB,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QAE7D,GAAG,CAAC,CAAC,CAAA,MAAM,EAAA,CAAC,GAAG,IAAI,CAAC,IAAI;QACxB,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,EAAE;YACb,KAAK,EAAG,MAAM,CAAC,KAAK;YACpB,SAAS,EAAG,MAAM,CAAC,SAAS;YAC5B,SAAS,EAAG,MAAM,CAAC,UAAU;YAC7B,KAAK,EAAG,MAAM,CAAC,SAAS;YACxB,QAAQ,EAAG,MAAM,CAAC,QAAQ;YAC1B,WAAW,EAAG,MAAM,CAAC,YAAY;YACjC,WAAW,EAAG,MAAM,CAAC,WAAW;QAClC,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW;QAC9B,EAAkB,AAAlB,gBAAkB;QAClB,KAAK,CAAC,MAAM,IAAI,sDAEA,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,gFAEvC,EAAE,MAAM,CAAC,KAAK,CAAC,0TASsC,EAAE,MAAM,CAAC,WAAW,CAAC,4TAOtB,EAAE,MAAM,CAAC,QAAQ,CAAC,gjCAgC9E,EAAE,MAAM,CAAC,WAAW,CAAC,GAAG,EAAC,GAAG,GAAI,CAAC;YAC/B,MAAM,EAAE,uNAKwB,EAAE,GAAG,CAAC,QAAQ,CAAC,kGAEhB,EAAE,GAAG,CAAC,IAAI,CAAC,sBACxC,EAAE,GAAG,CAAC,WAAW,CAAC,oDAGpB;QACF,CAAC,EAAE,IAAI,CAAC,CAAE,GAAE,sQAOsB,EAAE,MAAM,CAAC,SAAS,CAAC,4JAK7C,EAAE,MAAM,CAAC,SAAS,CAAC,8OASjC;QACA,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAC,MAAM;IACxD,CAAC,CAAA,KAAK,EAAC,GAAG,EAAC,CAAC;QACV,KAAK,CAAC,GAAG;IACX,CAAC;AACH,CAAC;AAGD,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst showRecipe = async function(){\n  try{\n\n    //loading recipe\n    const res = await fetch('https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886');\n    const data = await res.json();\n    // console.log(res,data);\n\n\n\n    if (!res.ok) throw new Error(`${data.message} (${res.status})`);\n\n    let {recipe} = data.data;\n    recipe = {\n      id: recipe.id,\n      title : recipe.title,\n      publisher : recipe.publisher,\n      sourceUrl : recipe.source_url,\n      image : recipe.image_url,\n      servings : recipe.servings,\n      cookingTime : recipe.cooking_time,\n      ingredients : recipe.ingredients\n    };\n    console.log(recipe.ingredients);\n    //rendering recipe\n    const markup = `\n    <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">${recipe.servings}</span>\n            <span class=\"recipe__info-text\">servings</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients.map(ing => {\n            return `\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">${ing.quantity}</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">${ing.unit}</span>\n              ${ing.description}\n              </div>\n            </li>\n            `;\n          }).join('')}\n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceUrl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n    `;\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin',markup);\n  }catch(err){\n    alert(err);\n  }\n};\n\n\nshowRecipe();"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}